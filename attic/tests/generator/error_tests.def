#define SMALL_BUFFER_SIZE 4
#define LARGE_BUFFER_SIZE 1024

// Test struct with minimal fields for buffer overflow testing
struct minimal_struct {
    codec_u8 byte1;
    codec_u16_be word1;
    codec_u32_le dword1;
};

// Test struct for null pointer handling
struct null_test {
    codec_u8 id;
    codec_u8 *null_data;  // User must handle this
};

// Test struct for memory allocation failures
struct large_array_struct {
    codec_u16_be count;
    codec_u64_be large_array[LARGE_BUFFER_SIZE];
};

// Test struct for nested error propagation
struct nested_error_test {
    codec_u8 header;
    struct minimal_struct nested;
    codec_u8 footer;
};

// Test struct for mixed error conditions
struct mixed_error_test {
    codec_u8 type;
    codec_u32_be length;
    codec_u8 *variable_data;  // User provides function
    struct minimal_struct embedded;
    codec_u16_le checksum;
};

// Test struct for boundary conditions
struct boundary_test {
    codec_u8 small_field;           // 1 byte
    codec_u64_be_bs large_field;    // 8 bytes with byte swapping
    codec_f64_le_bs float_field;    // 8 bytes float with byte swapping
};